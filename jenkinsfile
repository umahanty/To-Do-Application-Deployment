pipeline {
    agent any

    stages {
        stage("Code Checkout") {
            steps {
                echo "Cloning the code"
                git url: "https://github.com/umahanty/To-Do-Application-Deployment.git", branch: "main"
            }
        }

        stage("Build Docker Image") {
            steps {
                echo "Building the image"
                catchError(buildResult: 'UNSTABLE') {
                    sh "docker build -t flask-app ."
                }
            }
        }

        stage("Push To Docker Hub") {
            steps {
                echo "pushing to docker hub"
                withCredentials([usernamePassword(credentialsId:"dockerHub",passwordVariable:"dockerHubPass",usernameVariable:"dockerHubUser")]){
                    sh "docker tag flask-app ${env.dockerHubUser}/flask-app"
                    sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPass}"
                    sh "docker push ${env.dockerHubUser}/flask-app"
                }
            }
        }

        stage("Deploy") {
            steps {
                echo "Deploying to container"
                catchError(buildResult: 'UNSTABLE') {
                    sh "docker run -d -p 5000:5000 flask-app"
                    // Add a delay to allow the container to start up completely
                    sleep 20
                }
            }
        }

        stage("Selenium Test") {
            steps {
                echo "Running Selenium tests"
                sh 'pytest selenium1.py'
            }
        }
    }
}

